/*
    ＜関数定義について＞
      - var による変数宣言と同じ問題を抱えている
      - 下記のサンプルコードだと関数の巻き上げが起こる
 */

console.log(fn());

function fn() {
  return `foo`;
}

function fn() {
  return 'bar';
}

/*
    ＜内容が同じ２つの関数宣言方法＞
      - {} のブロックで終わる場合にはセミコロンをつけなくてよい、ただし関数式の場合は変数への代入になるため
        末尾にセミコロンが必要である
 */

// 関数宣言文による定義
function double(n) {
  return n * 2;
}

// 関数式による定義
const twice = function (n) {
  return n * 2; 
};

/*
    ＜JavaScriptの関数は第一級オブジェクト！！！＞
      - 変数に代入したり、配列の要素やオブジェクトのプロパティ値にしたり、他の関数の引数として渡したり
        別の関数の戻り値として設定できたりする（他のオブジェクトと同じで）
 */
